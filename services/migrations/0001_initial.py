# Generated by Django 3.2.18 on 2023-03-07 04:55

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.CharField(default='', max_length=256, verbose_name='Avatar')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be between 5 and 13 digits', regex='^[0-9]{5,13}$')])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('occupations', models.CharField(blank=True, max_length=255, null=True)),
                ('account_type', models.IntegerField(choices=[(1, 'Basic'), (2, 'Premium')], default=1, verbose_name='Type')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Users',
                'db_table': 'tool_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('balance_name', models.CharField(max_length=255)),
                ('balance_type', models.CharField(choices=[('cash', 'Cash'), ('bank_account', 'Bank account'), ('credit_card', 'Credit card'), ('investment', 'Investment'), ('e-wallet', 'E-wallet'), ('other', 'Other')], max_length=50)),
                ('currency', models.CharField(choices=[('VND', 'Vietnam dong'), ('USD', 'United States Dollar')], max_length=3)),
                ('description', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_code', models.CharField(max_length=10)),
                ('bank_name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('duration_days', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('income', 'Income'), ('expense', 'Expense'), ('lend', 'Lend'), ('borrow', 'Borrow'), ('transfer', 'Transfer'), ('adjustment', 'Adjustment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.CharField(choices=[('food', 'Food'), ('utilities', 'Utilities'), ('transport', 'Transport'), ('clothing', 'Clothing'), ('entertainment', 'Entertainment'), ('bank', 'Bank'), ('gifts', 'Gifts'), ('personal', 'Personal'), ('salary', 'Salary'), ('bonus', 'Bonus'), ('interest', 'Interest'), ('other', 'Other'), ('borrow_collecting_debts', 'Borrow/Collecting Debts')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Saving',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('withdraw_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('saving_name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('interest_paid', models.CharField(choices=[('up-front', 'Up-front'), ('maturity', 'Maturity'), ('monthly', 'Monthly')], max_length=50)),
                ('term_ended', models.CharField(choices=[('rollover-principal-and-interest', 'Rollover principal and interest'), ('rollover-principal', 'Rollover principal'), ('close-account', 'Close account')], max_length=50)),
                ('status', models.CharField(choices=[('open', 'Open'), ('close', 'Close'), ('withdraw-partially', 'Withdraw partially')], max_length=50)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.bank')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.term')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
